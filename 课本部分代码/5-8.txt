#include<stdio.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<stdlib.h>
#include<unistd.h>
void h_exit(int status)
{
	if(WIFEXITED(status))
		printf("noemal termination,exit status=%d\n",WEXITSTATUS(status));
	else if(WIFSIGNALED(status))
		printf("abnormal terminaton,signal number=%d %s\n",WTERMSIG(status),
	#ifdef WCOREDUMP
		WCOREDUMP(status)?")":"(core file generated)");
	#else
		")");
	#endif
}
int main()
{
	pid_t pid;
	int status;
	if((pid=fork())<0)
	{
		printf("fork error \n");
		exit(0);
	}
	else if(pid==0)
		exit(7);
	if(wait(&status)!=pid)
{
	printf("wait error\n");
	exit(0);
}
	h_exit(status);
	if((pid=fork())<0)
{
	printf("fork errof\n");
	exit(0);
}
	else if(pid==0)
	abort();
	if(wait(&status)!=pid)
{
	printf("wait error.\n");
	exit(0);
}
	h_exit(status);
	if((pid=fork())<0)
{
	printf("fork errof\n");
	exit(0);
}
	else if(pid==0)
		status/=pid;
	if(wait(&status)!=pid)
{
	printf("wait error.\n");
	exit(0);
}
	h_exit(status);
	exit(0);
}